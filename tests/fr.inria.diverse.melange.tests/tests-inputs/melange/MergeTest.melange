package mergetest

language MM1 {
	syntax "tests-inputs/metamodels/merge/MM1.ecore"
	exactType MM1MT
}

language MM2 {
	syntax "tests-inputs/metamodels/merge/MM2.ecore"
	exactType MM2MT
}

language AutoMerge1a{
	merge MM1
	exactType AutoMerge1aMT
}

language AutoMerge1b{
	merge MM1
	merge MM1
	exactType AutoMerge1bMT
}

language AutoMerge2a{
	merge MM2
	exactType AutoMerge2aMT
}

language AutoMerge2b{
	merge MM2
	merge MM2
	exactType AutoMerge2bMT
}

language MergeLangA{
	merge MM1
	merge MM2
	exactType MergeLangAMT
}

language MergeLangB{
	merge MM2
	merge MM1
	exactType MergeLangBMT
}

language MergeEcore{
	syntax "tests-inputs/metamodels/merge/MM1.ecore"
	syntax "tests-inputs/metamodels/merge/MM2.ecore"
	exactType MergeEcoreMT
}

language BothLangA{
	syntax "tests-inputs/metamodels/merge/MM1.ecore"
	merge MM2
	exactType BothLangA
}

language BothLangB{
	syntax "tests-inputs/metamodels/merge/MM2.ecore"
	merge MM1
	exactType BothLangB
}

language Merge1 {
	syntax "tests-inputs/metamodels/merge/Merge1.ecore"
	exactType Merge1mt
}

language Merge2 {
	syntax "tests-inputs/metamodels/merge/Merge2.ecore"
	exactType Merge2mt
}

language IncompatibleMergeLang{
	merge Merge1
	merge Merge2
	exactType IncompatibleMergeMT
}